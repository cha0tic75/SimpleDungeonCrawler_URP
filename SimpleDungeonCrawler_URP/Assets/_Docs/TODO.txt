TODO:

08/14/2022:
    - Added some animations to the player to give a bit of juice to the game: Idle, Movement, DamageHealth, DamageStamina
      The 2 damage anims need to be simplified to 1.  If a damagedealer is dealing damage to both, the animation doesnt 
      really look that great(Since only one animation can be playing at 1x).

      No Handle Animations, I created a PlayerAnimatorController component.  The player controller passes the MovementInput.Mag
      to the SetMoveSpeed method in the PlayerAnimatorController component.  The take damage is handled by listening to events on
      the StatComponent.

08/13/2022:
    - I refactored the damage system and stat system to use referfences to StatType_SO.  This allows the damage system to apply damage
      to more than one stat.  However, this was done in the DamagableProviders.  Perhaps the DamageDealerHandlers should hold these 
      references and the DamagableProviders should just broadcast a IDamagable[] (or list). amd the DamageDealerHandlers can decide 
      what to do with them.

    - I created a minimap.


08/12/2022:

    - The BaseStatComponent needs some sort of means to test if it can regenerate(Besides not having any damage or not sprinting)
      IE: it would be cool to only allow the players health to regen if they are not moving:

    - Use Shader Graph to create a shader for the electric wall flicker.  This will cause the effect to 
      be handle on the GPU side rather than the CPU.

    - flesh out the rest of the level geometry and place the appropriate keys.
    - Create some concept of enemy. This can be as simple as a square that moves up and down 
      at regular intervals.